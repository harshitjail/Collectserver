# Default values for collectserver.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: 192.168.4.235:5000/collectserver
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "1.0.0"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: NodePort
  port: 80
  targetPort: 8080

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths: []
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Resource limit availble on node
resourcesLimits:
  cpu: 1000m
  memory: 6G

# Resoucr Requested for container
requestsResources:
  cpu: 1000m
  memory: 4G

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

ports:
  containerPort: 8080

virtualService:
  enabled: true
  context: /collectServer
  hosts: "\"*\""
  gateways: rcp-gateway

#istioGateway name of the default gateway available in k8s   
gateway:
  enabled: true
  name: ingressgateway


#gatewayServers http gateway configuration values
gatewayServers:
  portNumber: 80 #Port Number
  portName: http #Name of the scheme port
  portProtocol: HTTP #Scheme
  hosts: "\"*\"" #Hosts DNS of FQDN

#READINESS

livenessProbe:
  initialDelaySeconds: 300
  periodSeconds: 20
  failureThreshold: 3

readinessProbe:
  initialDelaySeconds: 60
  periodSeconds: 10

nodeSelector: {}

tolerations: []

nfs:
  enabled: true

volumeMounts:
    sharedPath: "/opt/foresight/collectServer/temp" #Container Mount path

volumes:
    nfsServer: "192.168.4.235" #NFS server url 
    nfsPath: "/cluster-nfs/collectserver" #NFS path

persistentVolume:
  enabled: false
  storage: 10Gi #pv required storage
  accessModes: ReadWriteOnce #pv access mode
  nfsServer: "192.168.4.235" #nfs server for pv
  nfsPath: "/data/report" #nfs server mount path for pv

#volume claim for robin 
persistentVolumeClaim:
  enabled: false
  domain: robin
  username: shivchandra.pathak-a
  accessModes: ReadWriteOnce
  storageClass: robin
  storage: 10Gi

#CATALINA_OPTS
env:
  Xms: "1024m"
  Xmx: "5000m"
  MaxMetaspaceSize: "2024m"  

affinity: {}
